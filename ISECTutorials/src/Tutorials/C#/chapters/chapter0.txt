Introduction to C# and .Net

C# is a modern, general-purpose, object-oriented programming language developed by Microsoft and approved by European Computer Manufacturers Association (ECMA) and International Standards Organization (ISO).

C# was developed by Anders Hejlsberg and his team during the development of .Net Framework.

C# is designed for Common Language Infrastructure (CLI), which consists of the executable code and runtime environment that allows use of various high-level languages on different computer platforms and architectures.

The following reasons make C# a widely used professional language:
    It is a modern, general-purpose programming language
    It is object oriented.
    It is component oriented.
    It is easy to learn.
    It is a structured language.
    It produces efficient programs.
    It can be compiled on a variety of computer platforms.
    It is a part of .Net Framework.

Strong Programming Features of C#

Although C# constructs closely follow traditional high-level languages, C and C++ and being an object-oriented programming language. It has strong resemblance with Java, it has numerous strong programming features that make it endearing to a number of programmers worldwide.

Following is the list of few important features of C#:
    Boolean Conditions
    Automatic Garbage Collection
    Standard Library
    Assembly Versioning
    Properties and Events
    Delegates and Events Management
    Easy-to-use Generics
    Indexers
    Conditional Compilation
    Simple Multithreading
    LINQ and Lambda Expressions
    Integration with Windows

The .Net Framework

The .Net framework is a revolutionary platform that helps you to write the following types of applications âˆ’

Windows applications
Web applications
Web services
The .Net framework applications are multi-platform applications. The framework has been designed in such a way that it can be used from any of the following languages: C#, C++, Visual Basic, Jscript, COBOL, etc. All these languages can access the framework as well as communicate with each other.

The .Net framework consists of an enormous library of codes used by the client languages such as C#. Following are some of the components of the .Net framework:

    Common Language Runtime (CLR)
    The .Net Framework Class Library
    Common Language Specification
    Common Type System
    Metadata and Assemblies
    Windows Forms
    ASP.Net and ASP.Net AJAX
    ADO.Net
    Windows Workflow Foundation (WF)
    Windows Presentation Foundation
    Windows Communication Foundation (WCF)
    LINQ
For details of each component, please consult Microsoft's documentation.

Integrated Development Environment (IDE) for C#
Microsoft provides the following development tools for C# programming:

Visual Studio (VS)
Visual C# 2010 Express (VCE)
Visual Web Developer
The last two are freely available from Microsoft official website. Using these tools, you can write all kinds of C# programs from simple command-line applications to more complex applications. You can also write C# source code files using a basic text editor, like Notepad, and compile the code into assemblies using the command-line compiler, which is again a part of the .NET Framework.

Visual C# Express and Visual Web Developer Express edition are trimmed down versions of Visual Studio and has the same appearance. They retain most features of Visual Studio.

You can download it from Microsoft Visual Studio. It gets installed automatically on your machine.

Writing C# Programs on Linux or Mac OS
Although the.NET Framework runs on the Windows operating system, there are some alternative versions that work on other operating systems. Mono is an open-source version of the .NET Framework which includes a C# compiler and runs on several operating systems, including various flavors of Linux and Mac OS.

The stated purpose of Mono is not only to be able to run Microsoft .NET applications cross-platform, but also to bring better development tools for Linux developers. Mono can be run on many operating systems including Android, BSD, iOS, Linux, OS X, Windows, Solaris, and UNIX.

A C# program consists of the following parts:
    Namespace declaration
    A class
    Class methods
    Class attributes
    A Main method
    Statements and Expressions
    Comments

Let us look at a simple code that prints the words "Hello World":

using System;

namespace HelloWorldApplication {
   class HelloWorld {
      static void Main(string[] args) {
         /* my first program in C# */
         Console.WriteLine("Hello World");
         Console.ReadKey();
      }
   }
}
When this code is compiled and executed, it produces the following result:

Hello World

Let us look at the various parts of the given program:

    The first line of the program using System; - the using keyword is used to include the System namespace in the program. A program generally has multiple using statements.

    The next line has the namespace declaration. A namespace is a collection of classes. The HelloWorldApplication namespace contains the class HelloWorld.

    The next line has a class declaration, the class HelloWorld contains the data and method definitions that your program uses. Classes generally contain multiple methods. Methods define the behavior of the class. However, the HelloWorld class has only one method Main.

    The next line defines the Main method, which is the entry point for all C# programs. The Main method states what the class does when executed.

    The next line /*...*/ is ignored by the compiler and it is put to add comments in the program.

    The Main method specifies its behavior with the statement Console.WriteLine("Hello World");

    WriteLine is a method of the Console class defined in the System namespace. This statement causes the message "Hello, World!" to be displayed on the screen.

    The last line Console.ReadKey(); is for the VS.NET Users. This makes the program wait for a key press and it prevents the screen from running and closing quickly when the program is launched from Visual Studio .NET.

It is worth to note the following points:
    C# is case sensitive.
    All statements and expression must end with a semicolon (;).
    The program execution starts at the Main method.
    Unlike Java, program file name could be different from the class name.    